{"componentChunkName":"component---src-templates-blog-post-js","path":"/css","result":{"data":{"markdownRemark":{"html":"<p>默认 box-sizing: content-box;  计算content\nbox-sizing: border-box;  计算border+padding+content</p>\n<h2>BFC / Block Formatting Context</h2>\n<p>一个BFC是一个独立容器，决定了元素如何对其内容进行定位，以及与其他元素的关系与相互作用。\n相关链接：<a href=\"https://tech.youzan.com/css-margin-collapse/\">https://tech.youzan.com/css-margin-collapse/</a></p>\n<p>BFC如何定位：</p>\n<ol>\n<li>内部的Box会垂直一个接一个放置</li>\n<li>Box垂直方向的距离有margin决定，属于同一个BFC的两个相邻的（没有被padding、border、clear和line box分隔开）盒子（可能是父子元素，也可能是兄弟元素）margin会发生重叠</li>\n<li>BFC的区域不会与float Box重叠</li>\n<li>BFC是页面上的独立容器，容器里面的元素不会在布局上影响到外面的元素</li>\n<li>生成BFC的元素不会和在流中的子元素发生空白边折叠</li>\n<li>BFC高度包含浮动元素</li>\n<li>处于同一个BFC中的元素相互影响，可能会发生margin collapse</li>\n<li>浮动盒的区域不会叠加到BFC上</li>\n</ol>\n<p>满足一个条件即可触发BFC：</p>\n<ol>\n<li>html根元素</li>\n<li>float的值不为none</li>\n<li>overflow的值不为visible</li>\n<li>display的值为inline-block, table-cell, table-caption</li>\n<li>position的值为absolute或fixed</li>\n</ol>\n<p>经典问题：</p>\n<ol>\n<li>高度坍塌， margin重叠</li>\n</ol>\n<h2>CSS3 新特性</h2>\n<ol>\n<li>border-image</li>\n<li>linear-gradient</li>\n<li>transition</li>\n<li>flex</li>\n</ol>\n<h2>Flexbox</h2>\n<p>flex布局</p>\n<h2>一些兼容性问题</h2>\n<ol>\n<li>Chrome 中文界面下默认会将小于 12px 的文本强制按照 12px 显示,可通过加入 CSS 属性 -webkit-text-size-adjust: none; 解决。</li>\n</ol>\n<h2>display:none与visibility:hidden的区别</h2>\n<p>display : none 隐藏对应的元素，在文档布局中不再分配空间（回流+重绘）\nvisibility:hidden 隐藏对应的元素，在文档布局中仍保留原来的空间（重绘）</p>\n<h2>浮动元素</h2>\n<p>浮动定位不属于正常的页面流</p>\n<p>浮动带来的问题：</p>\n<ol>\n<li>父元素的高度无法被撑开，影响与父元素同级的元素</li>\n<li>与浮动元素同级的非浮动元素（内联元素）会跟随其后</li>\n<li>若非第一个元素浮动，则该元素之前的元素也需要浮动，否则会影响页面显示的结构。</li>\n</ol>\n<p>清除浮动的方式：</p>\n<ol>\n<li>父级div定义height（不推荐）</li>\n<li>最后一个浮动元素后加空div，添加样式clear:both（不推荐）</li>\n<li>用伪元素after清除（推荐）</li>\n<li>包含浮动元素的父标签添加样式overflow不为visible（推荐，但注意position带来的问题）</li>\n<li>父级div定义zoom（IE8以下）</li>\n</ol>\n<h2>上下margin重合问题</h2>\n<p>W3C文章：<a href=\"https://www.w3.org/TR/CSS2/box.html#collapsing-margins\">https://www.w3.org/TR/CSS2/box.html#collapsing-margins</a>\n如何避免外边距叠加：</p>\n<ol>\n<li>浮动元素不会与任何元素发生叠加，也包括它的子元素</li>\n<li>创建了BFC的元素不会和它的子元素发生外边距叠加</li>\n<li>绝对定位元素和其他任何元素之间不发生外边距叠加，也包括它的子元素</li>\n<li>inline-block元素和其他任何元素之间不发生外边距叠加，也包括它的子元素</li>\n<li>普通流中的块级元素的margin-bottom永远和它相邻的下一个块级元素的margin-top叠加，除非相邻的兄弟元素clear</li>\n<li>普通流中的块级元素（没有border-top、没有padding-top）的margin-top和它的第一个普通流中的子元素（没有clear）发生margin-top叠加</li>\n<li>普通流中的块级元素（height为auto、min-height为0、没有border-bottom、没有padding-bottom）和它的最后一个普通流中的子元素（没有自身发生margin叠加或clear）发生margin-bottom叠加</li>\n<li>如果一个元素的min-height为0、没有border、没有padding、高度为0或者auto、不包含子元素，那么它自身的外边距会发生叠加</li>\n</ol>\n<h2>响应式设计</h2>\n<pre class=\"grvsc-container material-theme\" data-language=\"html\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk1\">   &lt;</span><span class=\"mtk4\">meta</span><span class=\"mtk1\"> </span><span class=\"mtk7\">name</span><span class=\"mtk1\">=</span><span class=\"mtk6\">’viewport’</span><span class=\"mtk1\"> </span><span class=\"mtk7\">content</span><span class=\"mtk1\">=</span><span class=\"mtk6\">”width</span><span class=\"mtk9\">=</span><span class=\"mtk6\">device-width,</span><span class=\"mtk1\"> </span><span class=\"mtk7\">initial-scale</span><span class=\"mtk1\">=</span><span class=\"mtk6\">1.</span><span class=\"mtk1\"> </span><span class=\"mtk7\">maximum-scale</span><span class=\"mtk1\">=</span><span class=\"mtk6\">1,user-scalable</span><span class=\"mtk9\">=</span><span class=\"mtk6\">no”</span><span class=\"mtk1\">&gt;</span></span></code></pre>\n<h2>line-height</h2>\n<p>两行文字间基线的距离。\n经典：多行文本垂直局中</p>\n<h2>Chrome支持小于12px的文字</h2>\n<p>chrome中可以直接设置</p>\n<pre class=\"grvsc-container material-theme\" data-language=\"css\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk4\">p</span><span class=\"mtk1\">{</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    font-size:</span><span class=\"mtk7\">10</span><span class=\"mtk4\">px</span><span class=\"mtk1\">;</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk8\">-webkit-transform</span><span class=\"mtk1\">:</span><span class=\"mtk8\">scale</span><span class=\"mtk1\">(</span><span class=\"mtk7\">0.8</span><span class=\"mtk1\">);//0.8是缩放比例</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">} </span></span></code></pre>\n<h2>消除inline-block元素间的换行符空格间隙</h2>\n<ol>\n<li>用letter-spacing</li>\n<li>font-size </li>\n</ol>\n<h2>inline-block</h2>\n<p>不换行，不可以设置大小，大小又内容决定</p>\n<h2>3栏布局</h2>\n<ol>\n<li>column</li>\n<li>左右float，中间控制margin</li>\n<li>左右float+margin,中间BFC，因为BFC区域不会与浮动元素重叠</li>\n<li>全部float left</li>\n<li>table布局，但无法设置栏间距离</li>\n<li>绝对定位</li>\n</ol>\n<h2>Flex布局</h2>\n<p>前端客栈知乎专栏：<a href=\"https://zhuanlan.zhihu.com/p/25070186\">https://zhuanlan.zhihu.com/p/25070186</a></p>\n<ol>\n<li>flex-bisic: 设置子项的占用空间</li>\n<li>flex-grow: flex item的拉伸因子，用来“瓜分”父项的“剩余空间”</li>\n<li>flex-shrink: 指定了flex元素的收缩规则</li>\n</ol>\n<p>flex-grow与flex-shrink正好相对\nflex-grow的计算方法\nflex-shrink的计算方法</p>\n<h2><!DOCTYPE html>的作用</h2>\n<p>告诉解析器，应该使用什么样的文档类型解析文档</p>\n<h2>解决img图片自带边距的问题</h2>\n<ol>\n<li>转换为block</li>\n<li>给img定义vertical-align</li>\n<li>父容器的font-size设为0</li>\n<li>父容器设置与图片一样高</li>\n</ol>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n  }\n  \n  .grvsc-code {\n    display: inline-block;\n    min-width: 100%;\n  }\n  \n  .grvsc-line {\n    display: inline-block;\n    box-sizing: border-box;\n    width: 100%;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-line-highlighted {\n    background-color: var(--grvsc-line-highlighted-background-color, transparent);\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, transparent);\n  }\n  \n  .material-theme {\n    background-color: #282c34;\n    color: #abb2bf;\n  }\n  .material-theme .mtk1 { color: #ABB2BF; }\n  .material-theme .mtk4 { color: #E06C75; }\n  .material-theme .mtk7 { color: #D19A66; }\n  .material-theme .mtk6 { color: #98C379; }\n  .material-theme .mtk9 { color: #FFFFFF; }\n  .material-theme .mtk8 { color: #56B6C2; }\n</style>","frontmatter":{"date":"February 02, 2021","path":"/css","title":"CSS知识点"}}},"pageContext":{}},"staticQueryHashes":[]}