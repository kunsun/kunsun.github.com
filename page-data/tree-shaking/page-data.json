{"componentChunkName":"component---src-templates-blog-post-js","path":"/tree-shaking","result":{"data":{"markdownRemark":{"html":"<p>uglify擦除无用代码</p>\n<h2>概念</h2>\n<p>去掉dead code\nDCE  dead code elimination</p>\n<ol>\n<li>代码不会被执行</li>\n<li>代码执行的结果不会被用到</li>\n<li>代码只会影响死变量</li>\n</ol>\n<h2>webpack配置</h2>\n<p>webpack4的mode设置为production自动开启tree-shaking</p>\n<h2>原理</h2>\n<p>利用ES6模块化，ES6模块的特点：</p>\n<ol>\n<li>import 只能在顶层出现</li>\n<li>import后就不可以修改</li>\n</ol>\n<h2>注意点</h2>\n<p>代码不能有副作用，不然tree shaking会失效</p>\n<ol>\n<li>必须使用ES6语法</li>\n</ol>\n<h2>ES 模块化为什么要设计成静态的</h2>\n<p>一个明显的优势是：通过静态分析，我们能够分析出导入的依赖。如果导入的模块没有被使用，我们便可以通过 tree shaking 等手段减少代码体积，进而提升运行性能。这就是基于 ESM 实现 tree shaking 的基础。</p>\n<h2>ES 模块化的静态性带来了限制：</h2>\n<p>只能在文件顶部 import 依赖\nexport 导出的变量类型严格限制\n变量不允许被重新绑定，import 的模块名只能是字符串常量，即不可以动态确定依赖</p>\n<p>我们可以通过作用域分析，分析出代码里变量所属的作用域以及它们之间的引用关系，进而可以推导出变量和导入依赖变量的引用关系，在没有明显引用时，就可以进行去冗余。</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n  }\n  \n  .grvsc-code {\n    display: inline-block;\n    min-width: 100%;\n  }\n  \n  .grvsc-line {\n    display: inline-block;\n    box-sizing: border-box;\n    width: 100%;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-line-highlighted {\n    background-color: var(--grvsc-line-highlighted-background-color, transparent);\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, transparent);\n  }\n  \n</style>","frontmatter":{"date":"February 02, 2021","path":"/tree-shaking","title":"Tree Shaking"}}},"pageContext":{}},"staticQueryHashes":[]}