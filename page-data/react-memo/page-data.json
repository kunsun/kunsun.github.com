{"componentChunkName":"component---src-templates-blog-post-js","path":"/react-memo","result":{"data":{"markdownRemark":{"html":"<h1>使用React.memo提高组件的性能</h1>\n<h2>渲染</h2>\n<p>渲染指的就是一个更新DOM的过程。VirtualDOM出现之前，使用innerHTML；VirtualDOM出现之后，配合高效的Diff算法，以最小的代价更新DOM。</p>\n<h3>渲染何时触发</h3>\n<ol>\n<li>组件挂载\nReactDOM.render()</li>\n<li>setState\n执行setState会触发render</li>\n<li>父组件重新渲染\n只要父组件渲染了，即使传入子组件的props没有改变，也会触发子组件的render</li>\n</ol>\n<h3>避免不必要的渲染</h3>\n<ol>\n<li>非函数组件：使用shouldComponentUpdate 或者 PureComponent写组件</li>\n<li>函数组件：使用React.memo</li>\n</ol>\n<h2>React.memo</h2>\n<p>React.memo是React16.6引入的，用来解决函数式组件不必要渲染的问题。</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n  }\n  \n  .grvsc-code {\n    display: inline-block;\n    min-width: 100%;\n  }\n  \n  .grvsc-line {\n    display: inline-block;\n    box-sizing: border-box;\n    width: 100%;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-line-highlighted {\n    background-color: var(--grvsc-line-highlighted-background-color, transparent);\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, transparent);\n  }\n  \n</style>","frontmatter":{"date":"July 11, 2020","path":"/react-memo","title":"如何使用React.memo"}}},"pageContext":{}}}