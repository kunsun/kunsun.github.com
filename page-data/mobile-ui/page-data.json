{"componentChunkName":"component---src-templates-blog-post-js","path":"/mobile-ui","result":{"data":{"markdownRemark":{"html":"<p>参考文章：</p>\n<ol>\n<li><a href=\"https://juejin.im/post/5d736747e51d4561ff66688c\">https://juejin.im/post/5d736747e51d4561ff66688c</a></li>\n<li><a href=\"https://juejin.im/post/5cddf289f265da038f77696c#heading-28\">https://juejin.im/post/5cddf289f265da038f77696c#heading-28</a></li>\n<li><a href=\"https://www.kancloud.cn/chandler/web_app/1477878\">https://www.kancloud.cn/chandler/web_app/1477878</a></li>\n<li><a href=\"https://www.kancloud.cn/chandler/web_app/591334\">https://www.kancloud.cn/chandler/web_app/591334</a></li>\n<li><a href=\"https://github.com/jawil/blog/issues/21\">https://github.com/jawil/blog/issues/21</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/devicePixelRatio\">https://developer.mozilla.org/zh-CN/docs/Web/API/Window/devicePixelRatio</a></li>\n<li><a href=\"http://www.alloyteam.com/2016/03/mobile-web-adaptation-tool-rem/\">http://www.alloyteam.com/2016/03/mobile-web-adaptation-tool-rem/</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/31713047\">https://zhuanlan.zhihu.com/p/31713047</a></li>\n</ol>\n<h2>先熟悉几个概念</h2>\n<h3>像素</h3>\n<p>一个像素通常被视为影像的最小的完整取样。打印机的物理像素等于打印机的墨点。</p>\n<h3>物理像素</h3>\n<p>也称为设备像素，每个设备的像素都是固定的，如iphone5： 640 * 1136，一个物理像素是显示器的最小物理显示单元。 单位是pt</p>\n<h3>逻辑像素</h3>\n<p>=== CSS像素。是图像的基本采样单位\n=== 设备独立像素\n=== 设备无关的逻辑像素</p>\n<h3>devicePixelRatio，简称dpr</h3>\n<ol>\n<li>当前显示设备的物理像素分辨率与CSS像素分辨率的比值：设备像素比（dpr）= 屏幕物理像素（dp）/ CSS像素</li>\n<li>设备像素比 （dpr）=物理像素（pp） / 设备独立像素（dip）</li>\n</ol>\n<h3>document.documentElement.clientWidth</h3>\n<p>大多数移动端设备都默认980px</p>\n<h3>屏幕分辨率</h3>\n<p>屏幕分辨率指的是物理像素，而不是理想视口。</p>\n<h3>dpi or ppi</h3>\n<h3>移动端浏览器渲染在一个viewport的页面中的</h3>\n<h3>window.innerHeight / window.innerWidth</h3>\n<p>可视区域</p>\n<p>screen.height 屏幕高度 >= screen.availHeight 屏幕可用高度 >= window.outerHeight 浏览器高度 >= window.innerHeight 浏览器可用高度 >= document.documentElement.clientHeight body展示高度，去除了滚动条</p>\n<p>还有一个概念，body.offsetHeight：页面body总高度</p>\n<h3>viewport是容纳html的元素</h3>\n<p>document.documentElement 是指viewport的</p>\n<h2>适配方案</h2>\n<p>需要解决的两个问题：</p>\n<ol>\n<li>各终端下的适配问题</li>\n<li>Retina屏的细节处理</li>\n</ol>\n<p>引用flexible：</p>\n<blockquote>\n<p>由于viewport单位得到众多浏览器的兼容，lib-flexible这个过渡方案已经可以放弃使用，不管是现在的版本还是以前的版本，都存有一定的问题。建议大家开始使用viewport来替代此方。</p>\n</blockquote>\n<h2>视图</h2>\n<p>viewport 基本上是当前文档的可见部分</p>\n<ol>\n<li>布局视口(layout viewport)</li>\n<li>视觉视口(visual viewport)</li>\n<li>理想视口 ideal viewport</li>\n</ol>\n<pre class=\"grvsc-container material-theme\" data-language=\"html\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk1\">&lt;</span><span class=\"mtk4\">meta</span><span class=\"mtk1\"> </span><span class=\"mtk7\">name</span><span class=\"mtk1\">=</span><span class=\"mtk6\">&quot;viewport&quot;</span><span class=\"mtk1\"> </span><span class=\"mtk7\">content</span><span class=\"mtk1\">=</span><span class=\"mtk6\">&quot;width=&quot;</span><span class=\"mtk1\"> /&gt;</span></span></code></pre>\n<h3>布局视口</h3>\n<p>移动端，布局视口宽度默认为980px，使得pc端页面可以在手机中呈现，默认会缩小页面，使得在一屏幕中展示这个页面。\nmeta中设置的width指的是布局视口的宽度，即document.documentELement.clientWidth。\ncss媒体查询的宽度也是指布局视口宽度。</p>\n<h3>视觉视口</h3>\n<p>用户在移动设备屏幕上能看到的那部分区域。 当前浏览器可用视图包括滚动条</p>\n<h3>理想视口</h3>\n<p>布局视口明显对用户是不友好的，完全忽略了手机本身的尺寸。\n就是手机屏幕的大小，screen.width</p>\n<p>【设计稿】：设计师给的 750px 宽的设计稿是根据设备像素（device pixel，物理像素）为单位制作的设计稿。\n【web页面编写】：前端工程师在编码 web 页面时所写的 CSS 像素 则需要根据 设备像素比 来进行换算。</p>\n<h2>如何做移动端尺寸自适应</h2>\n<ol>\n<li>直接将width设置为设计稿尺寸1080，缺点是影响媒体查询</li>\n<li>用inital-scale整体缩小画布，布局尺寸变大，即容纳的css像素变多。采用依据dpr动态改变，放大布局视图宽度width == screen.width * dpr。</li>\n</ol>\n<p>设置initial-scale值为0.5，那么layout viewport的大小就是ideal viewport的两倍。</p>\n<p>页面被用户放大，视觉视口内CSS像素数量减少；被用户缩小，视觉视口内CSS像素数量增多就行了。\ninitial-scale=1与width=device-width的效果是一样的</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n  }\n  \n  .grvsc-code {\n    display: inline-block;\n    min-width: 100%;\n  }\n  \n  .grvsc-line {\n    display: inline-block;\n    box-sizing: border-box;\n    width: 100%;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-line-highlighted {\n    background-color: var(--grvsc-line-highlighted-background-color, transparent);\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, transparent);\n  }\n  \n  .material-theme {\n    background-color: #282c34;\n    color: #abb2bf;\n  }\n  .material-theme .mtk1 { color: #ABB2BF; }\n  .material-theme .mtk4 { color: #E06C75; }\n  .material-theme .mtk7 { color: #D19A66; }\n  .material-theme .mtk6 { color: #98C379; }\n</style>","frontmatter":{"date":"February 02, 2021","path":"/mobile-ui","title":"移动端UI适配"}}},"pageContext":{}},"staticQueryHashes":[]}