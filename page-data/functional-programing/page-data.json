{"componentChunkName":"component---src-templates-blog-post-js","path":"/functional-programing","result":{"data":{"markdownRemark":{"html":"<p>参考书：<a href=\"https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/\">https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/</a></p>\n<p>函数式的好处：</p>\n<ol>\n<li>表达力更清晰</li>\n<li>利于复用</li>\n<li>利于维护：同样的输入有同样的结果，在维护和调试代码时能够保持专注</li>\n</ol>\n<h2>纯函数</h2>\n<blockquote>\n<p>一个函数如果输入参数确定，输出结果是唯一确定的，那么它就是纯函数。</p>\n</blockquote>\n<p>纯函数不能修改外部变量，造成副作用，不能调用 Math.radom() 方法以及发送异步请求等，因为这些操作都不具有确定性。</p>\n<p>纯函数的特点：</p>\n<ol>\n<li>无状态</li>\n<li>无副作用</li>\n<li>无关时序</li>\n<li>幂等： 无论调用多少次，结果相同</li>\n</ol>\n<h2>高阶函数</h2>\n<p>函数缓存</p>\n<pre class=\"grvsc-container material-theme\" data-language=\"js\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk10\">const</span><span class=\"mtk1\"> </span><span class=\"mtk3\">memorize</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk4 mtki\">fn</span><span class=\"mtk1\"> </span><span class=\"mtk10\">=&gt;</span><span class=\"mtk1\"> {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk10\">let</span><span class=\"mtk1\"> </span><span class=\"mtk4\">cacheMap</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> {}</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk10\">return</span><span class=\"mtk1\"> </span><span class=\"mtk10\">function</span><span class=\"mtk1\">(...</span><span class=\"mtk4 mtki\">args</span><span class=\"mtk1\">) {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">        </span><span class=\"mtk10\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">cacheKey</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk4\">args</span><span class=\"mtk1\">.</span><span class=\"mtk3\">join</span><span class=\"mtk1\">(</span><span class=\"mtk6\">&#39;_&#39;</span><span class=\"mtk1\">)</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">        </span><span class=\"mtk10\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">cacheKey</span><span class=\"mtk1\"> </span><span class=\"mtk10\">in</span><span class=\"mtk1\"> </span><span class=\"mtk4\">cacheMap</span><span class=\"mtk1\">) {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">            </span><span class=\"mtk10\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">cache</span><span class=\"mtk1\">[</span><span class=\"mtk4\">cacheKey</span><span class=\"mtk1\">]</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">        } </span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">        </span><span class=\"mtk10\">else</span><span class=\"mtk1\"> {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">            </span><span class=\"mtk10\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">cacheMap</span><span class=\"mtk1\">[</span><span class=\"mtk4\">cacheKey</span><span class=\"mtk1\">] </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk4\">fn</span><span class=\"mtk1\">.</span><span class=\"mtk3\">apply</span><span class=\"mtk1\">(</span><span class=\"mtk11\">this</span><span class=\"mtk1\"> </span><span class=\"mtk8\">||</span><span class=\"mtk1\"> {}, </span><span class=\"mtk4\">args</span><span class=\"mtk1\">)</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">}</span></span></code></pre>\n<h2>组合</h2>\n<p>更加通用的组合做法是使用 compose 方法，收益非常直观：</p>\n<ul>\n<li>单一功能的小函数更好维护</li>\n<li>通过组合，将单一功能的小函数串联起来，完成复杂的功能</li>\n<li>复用性更好，硬编码更少</li>\n</ul>\n<h2>point free</h2>\n<p>没有形参</p>\n<h2>curry化分析</h2>\n<p>是把接受多个参数的函数变换成接受一个单一参数的函数，并且返回接受余下的参数而且返回结果的新函数的技术</p>\n<pre class=\"grvsc-container material-theme\" data-language=\"js\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk10\">const</span><span class=\"mtk1\"> </span><span class=\"mtk3\">filterLowerNumber</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk4 mtki\">number</span><span class=\"mtk1\"> </span><span class=\"mtk10\">=&gt;</span><span class=\"mtk1\"> {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk10\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4 mtki\">array</span><span class=\"mtk1\"> </span><span class=\"mtk10\">=&gt;</span><span class=\"mtk1\"> {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">        </span><span class=\"mtk10\">let</span><span class=\"mtk1\"> </span><span class=\"mtk4\">result</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> []</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">        </span><span class=\"mtk10\">for</span><span class=\"mtk1\"> (</span><span class=\"mtk10\">let</span><span class=\"mtk1\"> </span><span class=\"mtk4\">i</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk7\">0</span><span class=\"mtk1\">, </span><span class=\"mtk4\">length</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk4\">array</span><span class=\"mtk1\">.</span><span class=\"mtk4\">length</span><span class=\"mtk1\">; </span><span class=\"mtk4\">i</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk4\">length</span><span class=\"mtk1\">; </span><span class=\"mtk4\">i</span><span class=\"mtk8\">++</span><span class=\"mtk1\">) {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">            </span><span class=\"mtk10\">let</span><span class=\"mtk1\"> </span><span class=\"mtk4\">currentValue</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk4\">array</span><span class=\"mtk1\">[</span><span class=\"mtk4\">i</span><span class=\"mtk1\">]</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">            </span><span class=\"mtk10\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">currentValue</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&lt;</span><span class=\"mtk1\"> </span><span class=\"mtk4\">number</span><span class=\"mtk1\">) </span><span class=\"mtk4\">result</span><span class=\"mtk1\">.</span><span class=\"mtk3\">push</span><span class=\"mtk1\">(</span><span class=\"mtk4\">currentValue</span><span class=\"mtk1\">)</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">        </span><span class=\"mtk10\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">result</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">}</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk10\">const</span><span class=\"mtk1\"> </span><span class=\"mtk11\">filterLowerThan10</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">filterLowerNumber</span><span class=\"mtk1\">(</span><span class=\"mtk7\">10</span><span class=\"mtk1\">)</span></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"></span>\n<span class=\"grvsc-line\"><span class=\"mtk3\">filterLowerThan10</span><span class=\"mtk1\">([</span><span class=\"mtk7\">1</span><span class=\"mtk1\">, </span><span class=\"mtk7\">3</span><span class=\"mtk1\">, </span><span class=\"mtk7\">5</span><span class=\"mtk1\">, </span><span class=\"mtk7\">29</span><span class=\"mtk1\">, </span><span class=\"mtk7\">34</span><span class=\"mtk1\">])</span></span></code></pre>\n<p>例题1:\n实现 add 方法，要求：\nadd(1)(2) == 3 // true\nadd(1)(2)(3) == 6 // true</p>\n<pre class=\"grvsc-container material-theme\" data-language=\"js\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk10\">let</span><span class=\"mtk1\"> </span><span class=\"mtk3\">add1</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> (</span><span class=\"mtk4 mtki\">arg1</span><span class=\"mtk1\">) </span><span class=\"mtk10\">=&gt;</span><span class=\"mtk1\"> {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk10\">let</span><span class=\"mtk1\"> </span><span class=\"mtk4\">args</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> [</span><span class=\"mtk4\">arg1</span><span class=\"mtk1\">];</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk10\">const</span><span class=\"mtk1\"> </span><span class=\"mtk3\">fn</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> (</span><span class=\"mtk4 mtki\">arg2</span><span class=\"mtk1\">) </span><span class=\"mtk10\">=&gt;</span><span class=\"mtk1\"> {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk4\">args</span><span class=\"mtk1\">.</span><span class=\"mtk3\">push</span><span class=\"mtk1\">(</span><span class=\"mtk4\">arg2</span><span class=\"mtk1\">);</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk10\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">fn</span><span class=\"mtk1\">;</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  }</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk4\">fn</span><span class=\"mtk1\">.</span><span class=\"mtk3\">toString</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> () </span><span class=\"mtk10\">=&gt;</span><span class=\"mtk1\"> {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk10\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">args</span><span class=\"mtk1\">.</span><span class=\"mtk3\">reduce</span><span class=\"mtk1\">((</span><span class=\"mtk4 mtki\">prev</span><span class=\"mtk1\">, </span><span class=\"mtk4 mtki\">item</span><span class=\"mtk1\">) </span><span class=\"mtk10\">=&gt;</span><span class=\"mtk1\"> {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">      </span><span class=\"mtk10\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">prev</span><span class=\"mtk1\"> </span><span class=\"mtk8\">+</span><span class=\"mtk1\"> </span><span class=\"mtk4\">item</span><span class=\"mtk1\">;</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    }, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">)</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  }</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">  </span><span class=\"mtk10\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">fn</span><span class=\"mtk1\">;</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">}</span></span></code></pre>\n<p>更加通用的实现：</p>\n<pre class=\"grvsc-container material-theme\" data-language=\"js\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk10\">const</span><span class=\"mtk1\"> </span><span class=\"mtk3\">add</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> (...</span><span class=\"mtk4 mtki\">arg1</span><span class=\"mtk1\">) </span><span class=\"mtk10\">=&gt;</span><span class=\"mtk1\"> {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">   </span><span class=\"mtk10\">let</span><span class=\"mtk1\"> </span><span class=\"mtk4\">args</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> [...</span><span class=\"mtk4\">arg1</span><span class=\"mtk1\">]</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">   </span><span class=\"mtk10\">const</span><span class=\"mtk1\"> </span><span class=\"mtk3\">fn</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> (...</span><span class=\"mtk4 mtki\">arg2</span><span class=\"mtk1\">) </span><span class=\"mtk10\">=&gt;</span><span class=\"mtk1\"> {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">       </span><span class=\"mtk4\">args</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> [...</span><span class=\"mtk4\">args</span><span class=\"mtk1\">, ...</span><span class=\"mtk4\">arg2</span><span class=\"mtk1\">]</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">        </span><span class=\"mtk10\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">fn</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk4\">fn</span><span class=\"mtk1\">.</span><span class=\"mtk3\">toString</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk10\">function</span><span class=\"mtk1\"> () {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">        </span><span class=\"mtk10\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">args</span><span class=\"mtk1\">.</span><span class=\"mtk3\">reduce</span><span class=\"mtk1\">((</span><span class=\"mtk4 mtki\">prev</span><span class=\"mtk1\">, </span><span class=\"mtk4 mtki\">item</span><span class=\"mtk1\">) </span><span class=\"mtk10\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk4\">prev</span><span class=\"mtk1\"> </span><span class=\"mtk8\">+</span><span class=\"mtk1\"> </span><span class=\"mtk4\">item</span><span class=\"mtk1\">, </span><span class=\"mtk7\">0</span><span class=\"mtk1\">)</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk10\">return</span><span class=\"mtk1\"> </span><span class=\"mtk4\">fn</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">}</span></span></code></pre>\n<p>例题2: 编写一个通用的curry函数\n首先明确概念，Function.length指明函数形参的个数</p>\n<p>实现原理：\n先用闭包把传入参数保存起来，当传入参数的数量足够执行函数时，就开始执行函数。步骤：</p>\n<ol>\n<li>先逐步接受参数，并进行存储，以供后续使用</li>\n<li>先不进行函数计算，延后执行</li>\n<li>在符合条件时，根据存储的参数，统一传给函数进行计算</li>\n</ol>\n<pre class=\"grvsc-container material-theme\" data-language=\"js\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk10\">const</span><span class=\"mtk1\"> </span><span class=\"mtk3\">curry</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> </span><span class=\"mtk4 mtki\">fn</span><span class=\"mtk1\"> </span><span class=\"mtk10\">=&gt;</span><span class=\"mtk1\"> {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    </span><span class=\"mtk10\">return</span><span class=\"mtk1\"> </span><span class=\"mtk3\">tempFn</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> (...</span><span class=\"mtk4 mtki\">arg1</span><span class=\"mtk1\">) </span><span class=\"mtk10\">=&gt;</span><span class=\"mtk1\"> {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">        </span><span class=\"mtk10\">if</span><span class=\"mtk1\"> (</span><span class=\"mtk4\">arg1</span><span class=\"mtk1\">.</span><span class=\"mtk4\">length</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&gt;=</span><span class=\"mtk1\"> </span><span class=\"mtk4\">fn</span><span class=\"mtk1\">.</span><span class=\"mtk4\">length</span><span class=\"mtk1\">) {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">            </span><span class=\"mtk10\">return</span><span class=\"mtk1\"> </span><span class=\"mtk3\">fn</span><span class=\"mtk1\">(...</span><span class=\"mtk4\">arg1</span><span class=\"mtk1\">)</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">        </span><span class=\"mtk10\">else</span><span class=\"mtk1\"> {</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">            </span><span class=\"mtk10\">return</span><span class=\"mtk1\"> (...</span><span class=\"mtk4 mtki\">arg2</span><span class=\"mtk1\">) </span><span class=\"mtk10\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk3\">tempFn</span><span class=\"mtk1\">(...</span><span class=\"mtk4\">arg1</span><span class=\"mtk1\">, ...</span><span class=\"mtk4\">arg2</span><span class=\"mtk1\">)</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">        }</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">    }</span></span>\n<span class=\"grvsc-line\"><span class=\"mtk1\">}</span></span></code></pre>\n<h2>反curry化</h2>\n<p>没有理解</p>\n<h2>偏函数 partial</h2>\n<pre class=\"grvsc-container material-theme\" data-language=\"js\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"mtk10\">const</span><span class=\"mtk1\"> </span><span class=\"mtk3\">partial</span><span class=\"mtk1\"> </span><span class=\"mtk8\">=</span><span class=\"mtk1\"> (</span><span class=\"mtk4 mtki\">fn</span><span class=\"mtk1\">, ...</span><span class=\"mtk4 mtki\">rest</span><span class=\"mtk1\">) </span><span class=\"mtk10\">=&gt;</span><span class=\"mtk1\"> (...</span><span class=\"mtk4 mtki\">args</span><span class=\"mtk1\">) </span><span class=\"mtk10\">=&gt;</span><span class=\"mtk1\"> </span><span class=\"mtk3\">fn</span><span class=\"mtk1\">(...</span><span class=\"mtk4\">rest</span><span class=\"mtk1\">, ...</span><span class=\"mtk4\">args</span><span class=\"mtk1\">)   </span></span></code></pre>\n<h2>函子 functor</h2>\n<h3>of函子</h3>\n<h3>maybe 函子</h3>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n  }\n  \n  .grvsc-code {\n    display: inline-block;\n    min-width: 100%;\n  }\n  \n  .grvsc-line {\n    display: inline-block;\n    box-sizing: border-box;\n    width: 100%;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-line-highlighted {\n    background-color: var(--grvsc-line-highlighted-background-color, transparent);\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, transparent);\n  }\n  \n  .material-theme {\n    background-color: #282c34;\n    color: #abb2bf;\n  }\n  .material-theme .mtki { font-style: italic; }\n  .material-theme .mtk10 { color: #C678DD; }\n  .material-theme .mtk1 { color: #ABB2BF; }\n  .material-theme .mtk3 { color: #61AFEF; }\n  .material-theme .mtk8 { color: #56B6C2; }\n  .material-theme .mtk4 { color: #E06C75; }\n  .material-theme .mtk11 { color: #E5C07B; }\n  .material-theme .mtk6 { color: #98C379; }\n  .material-theme .mtk7 { color: #D19A66; }\n</style>","frontmatter":{"date":"February 02, 2021","path":"/functional-programing","title":"函数式编程"}}},"pageContext":{}},"staticQueryHashes":[]}